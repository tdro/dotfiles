#!/bin/sh -eu

date=$(date +%s)
program=$(basename "$0")
key="QdUEdQBncNzJgIJqTA30"
hxnormalize="hxnormalize -l 99999999 -x"
items=/tmp/bookmarks_items_$key
titles=/tmp/bookmarks_titles_$key
anchors=/tmp/bookmarks_anchors_$key
dependencies=$(command -V "$program" sh xmlstarlet hxnormalize paste hxselect hxincl xdg-open rofi basename | awk '{ print $1, $3 }' | column -t)

trap 'rm $items $titles $anchors > /dev/null 2>&1 || true; trap - EXIT; exit' EXIT INT HUP

base=\
"<!DOCTYPE NETSCAPE-Bookmark-file-1>
<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">
<title>Bookmarks</title>
<h1>Bookmarks</h1>
<dl>
<!-- include $items --></dl>
"

Help() {
printf \
"
Usage: %s [FLAGS]... [ARGUMENTS]...

The program $program shall execute basic operations
on Netscape Bookmark HTML files.

  Command List:

    $program combine ./one ./two ./three  Combine bookmark.html files.
    $program show ./marks                 Show list of bookmarks.
    $program check                        Check dependencies.
    $program count ./marks                Count links.
    $program help -h --help               Show this help menu.

" "$program";
}

Count() {
  grep --count --recursive --ignore-case --extended-regexp "://" "${1:-bookmarks.txt}"
}

Combine () {
  for file in "$@"
  do $hxnormalize "$file" | sed 's/&/&amp;/g' \
    | xmlstarlet edit -S \
      --delete '//a/@add_date' \
      --delete '//a/@icon' \
      --delete '//a/@icon_uri' \
      --delete '//a/@last_charset' \
      --delete '//a/@last_modified' \
      --delete '//a/@last_modified' \
      --delete '//a/@tags' \
    | $hxnormalize | hxselect -i -s '\n' dt;
  done | sort | awk '!removeDuplicates[$0]++' >> "$items";
  printf "%s" "$base" | hxincl -f -x > "bookmarks-$date.html";
  realpath "bookmarks-$date.html";
}

Show () {
  $hxnormalize "${1:-}" | hxselect -c -i -s '\n' 'a::attr(href)' > "$anchors"
  $hxnormalize "${1:-}" | hxselect -c -i -s '\n' 'a' > "$titles"
  xdg-open "$(paste -d' ' "$anchors" "$titles" \
  | rofi -font "sans 12" -matching regex -padding 20 -dmenu -i -p 'Bookmarks' \
  | awk '{ print $1 }')";
}

[ "${1:-}" = "show"    ] && [ $# =   2 ] && Show    "$2" && exit;
[ "${1:-}" = "combine" ] && [ $# -gt 2 ] && Combine "$2" && exit;
[ "${1:-}" = "count"   ] && [ $# =   2 ] && Count   "$2" && exit;
[ "${1:-}" = "check"   ] && [ $# =   1 ] && printf '%s\n' "$dependencies" && exit;

[ "${1:-}" = "help"    ] || [ "${1:-}" = "-h" ] || [ "${1:-}" = "--help" ] || [ "$#" = 0 ] && Help "$@" && exit;

printf "\n" && printf "Error: Parsing argument '%s'.\n" "$@" && printf "\n" && $program help | awk '/Command List:/,0' | grep "$program $(printf '%s' "$1" | cut --characters 1)" && printf "\n" && exit 1;

Help && printf "\n" && printf "Error: Parsing argument '%s'.\n" "$@" && printf "\n" && exit 1;
