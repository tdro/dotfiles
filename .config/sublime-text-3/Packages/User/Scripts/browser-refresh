#!/bin/bash

# set target browser and title
browser='Chromium'
title='GSRC'

# set pid file path
pidfile=/tmp/browser.refresh.pid

# use pid to check if program already running
if [ -f $pidfile ]; then
  pid=$(cat $pidfile)
  if [ "$pid" != $$ ]; then
    echo "Live Reload: Process is already running with PID $pid. Killing..."
    notify-send "Live Reload: Process is already running with PID $pid. Killing...";
    kill -9 $pid;
    trap "rm -f -- '$pidfile'" EXIT;
  else
  echo $$ > "$pidfile"
  fi
fi

# browser we would like to live reload
reload_browser_id=$(

  comm -12 <(xdotool search --name  $title  | sort) <(xdotool search --class $browser  | sort)

); # named pipe comparison comm -12 /dev/fd/63 /dev/fd/63. See  https://unix.stackexchange.com/questions/254820/xdotool-how-to-search-for-window-by-title-and-class-with-different-patterns-si

# active window where the script was activated
active_window_id=$(xdotool getwindowfocus)

# echo target browser id for debugging purposes
#echo $reload_browser_id;

# bail on empty window id
if [ -z $reload_browser_id ]; then
  notify-send "No match for browser $browser with title $title!";
  exit;
fi

# activate target browser
xdotool windowactivate $reload_browser_id;

# declare the variable i as an interger
declare -i i=0;

while true; do

    # bail out if there are too many iterations
    if [ "$i" -gt 10 ]; then

      notify-send "No match for browser $browser with title $title!";

      break;

    fi
    
    # set index i to increment by 1
    i+=1

    # echo the amount of interations for debugging purposes
    echo "Iteration: $i";
    
    # get target browser window
    focused_browser_id=$(xdotool getwindowfocus);

    while [ "$reload_browser_id" -eq "$focused_browser_id" ]; do

      xdotool key "ctrl+r";

      # echo received browser id for debugging purposes
      #echo $reload_browser_id;

      # break out of both while loops
      break 2;

    done;

done

xdotool windowactivate $active_window_id;
trap "rm -f -- '$pidfile'" EXIT; 
exit 0;
