{
  "linter": {
    "rules": {
      "recommended": false,
      "complexity": {
        "noExtraBooleanCast":                          "error",
        "noMultipleSpacesInRegularExpressionLiterals": "error",
        "noUselessCatch":                              "error",
        "noUselessConstructor":                        "error",
        "noUselessLabel":                              "error",
        "noUselessRename":                             "error",
        "noVoid":                                      "error",
        "noWith":                                      "error",
        "useArrowFunction":                            "error",
        "useLiteralKeys":                              "error",
        "useRegexLiterals":                            "error"
      },
      "correctness": {
        "noConstAssign":                 "error",
        "noConstantCondition":           "error",
        "noConstructorReturn":           "error",
        "noEmptyCharacterClassInRegex":  "error",
        "noEmptyPattern":                "error",
        "noGlobalObjectCalls":           "error",
        "noInnerDeclarations":           "error",
        "noInvalidConstructorSuper":     "error",
        "noInvalidNewBuiltin":           "error",
        "noInvalidUseBeforeDeclaration": "error",
        "noNewSymbol":                   "error",
        "noNonoctalDecimalEscape":       "error",
        "noPrecisionLoss":               "error",
        "noSelfAssign":                  "error",
        "noSetterReturn":                "error",
        "noSwitchDeclarations":          "error",
        "noUndeclaredVariables":         "error",
        "noUnreachable":                 "error",
        "noUnreachableSuper":            "error",
        "noUnsafeFinally":               "error",
        "noUnsafeOptionalChaining":      "error",
        "noUnusedLabels":                "error",
        "noUnusedPrivateClassMembers":   "error",
        "noUnusedVariables":             "error",
        "useArrayLiterals":              "error",
        "useIsNan":                      "error",
        "useValidForDirection":          "error",
        "useYield":                      "error"
      },
      "security": {
        "noGlobalEval": "error"
      },
      "style": {
        "noArguments":               "error",
        "noCommaOperator":           "error",
        "noParameterAssign":         "error",
        "noVar":                     "error",
        "useCollapsedElseIf":        "error",
        "useConst":                  "error",
        "useDefaultParameterLast":   "error",
        "useExponentiationOperator": "error",
        "useNumericLiterals":        "error",
        "useSingleVarDeclarator":    "error",
        "useTemplate":               "error"
      },
      "suspicious": {
        "noAssignInExpressions":      "error",
        "noAsyncPromiseExecutor":     "error",
        "noCatchAssign":              "error",
        "noClassAssign":              "error",
        "noCompareNegZero":           "error",
        "noConfusingLabels":          "error",
        "noControlCharactersInRegex": "error",
        "noDebugger":                 "error",
        "noDoubleEquals":             "error",
        "noDuplicateCase":            "error",
        "noDuplicateClassMembers":    "error",
        "noDuplicateObjectKeys":      "error",
        "noDuplicateParameters":      "error",
        "noEmptyBlockStatements":     "error",
        "noFallthroughSwitchClause":  "error",
        "noFunctionAssign":           "error",
        "noGlobalAssign":             "error",
        "noImportAssign":             "error",
        "noLabelVar":                 "error",
        "noMisleadingCharacterClass": "error",
        "noPrototypeBuiltins":        "error",
        "noRedeclare":                "error",
        "noSelfCompare":              "error",
        "noShadowRestrictedNames":    "error",
        "noSparseArray":              "error",
        "noUnsafeNegation":           "error",
        "useAwait":                   "error",
        "useDefaultSwitchClauseLast": "error",
        "useGetterReturn":            "error",
        "useValidTypeof":             "error"
      }
    }
  }
}
